{"version":3,"sources":["I18nProvider.js"],"names":["React","createContext","IntlProvider","Runtime","I18nContext","I18nProvider","loader","children","props","error","message","startsWith","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASI,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoB,KAAGC;AAAvB,CAAtB,EAAsD;AACjE,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAA7B,kBACI,oBAAC,YAAD,eACQE,KADR;AAEI,IAAA,OAAO,EAAGC,KAAD,IAAW;AAChB,UACIA,KAAK,CAACC,OAAN,CAAcC,UAAd,CACI,4CADJ,CADJ,EAIE;AACE;AACH;;AAEDR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMH,KAA3B;AACH;AAZL,MAcKF,QAdL,CADJ,CADJ;AAoBH","sourcesContent":["import React, { createContext } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport Runtime from '../Runtime';\n\nexport const I18nContext = createContext();\n\n/**\n * I18nProvider component.\n * @param {Object} props\n * @property {stirng} props.locale\n * @property {stirng} props.defaultLocale\n * @property {Function} props.loader\n */\nexport default function I18nProvider({ loader, children, ...props }) {\n    return (\n        <I18nContext.Provider value={{ loader }}>\n            <IntlProvider\n                {...props}\n                onError={(error) => {\n                    if (\n                        error.message.startsWith(\n                            '[@formatjs/intl Error MISSING_TRANSLATION]'\n                        )\n                    ) {\n                        return;\n                    }\n\n                    Runtime.log('error', () => error);\n                }}\n            >\n                {children}\n            </IntlProvider>\n        </I18nContext.Provider>\n    );\n}\n"]}