{"version":3,"sources":["I18nProvider.js"],"names":["React","createContext","IntlProvider","I18nContext","I18nProvider","loader","children","props","cache"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASG,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoB,KAAGC;AAAvB,CAAtB,EAAsD;AACjE,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAF;AAAUG,MAAAA,KAAK,EAAE;AAAjB;AAA7B,kBACI,oBAAC,YAAD,EAAkBD,KAAlB,EACKD,QADL,CADJ,CADJ;AAOH","sourcesContent":["import React, { createContext } from 'react';\nimport { IntlProvider } from 'react-intl';\n\nexport const I18nContext = createContext();\n\n/**\n * I18nProvider component.\n * @param {Object} props\n * @property {stirng} props.locale\n * @property {stirng} props.defaultLocale\n * @property {Function} props.loader\n */\nexport default function I18nProvider({ loader, children, ...props }) {\n    return (\n        <I18nContext.Provider value={{ loader, cache: {} }}>\n            <IntlProvider {...props}>\n                {children}\n            </IntlProvider>\n        </I18nContext.Provider>\n    );\n}\n"]}