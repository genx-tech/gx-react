{"version":3,"sources":["Camera.js"],"names":["React","useMemo","useRef","Text","ActivityIndicator","Block","Button","RNCamera","JVCamera","meta","value","inline","key","styles","refCamera","takePicture","current","options","quality","base64","data","takePictureAsync","console","log","uri","Constants","Type","back","FlashMode","on","title","message","buttonPositive","buttonNegative","camera","status","recordAudioPermissionStatus","padding"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,OAAvC;AACA,SAASC,IAAT,EAAeC,iBAAf,QAAwC,cAAxC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA,GAAvB;AAA4BC,EAAAA;AAA5B,CAAlB,EAAwD;AACnE,QAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMa,WAAW,GAAG,YAAY;AAC5B,QAAID,SAAS,CAACE,OAAd,EAAuB;AACnB,YAAMC,OAAO,GAAG;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAhB;AACA,YAAMC,IAAI,GAAG,MAAMN,SAAS,CAACE,OAAV,CAAkBK,gBAAlB,CAAmCJ,OAAnC,CAAnB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAjB;AACH;AACJ,GAND;;AAQA,sBACI,oBAAC,KAAD,qBACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAEV,SADT;AAEI,IAAA,IAAI,EAAEP,QAAQ,CAACkB,SAAT,CAAmBC,IAAnB,CAAwBC,IAFlC;AAGI,IAAA,SAAS,EAAEpB,QAAQ,CAACkB,SAAT,CAAmBG,SAAnB,CAA6BC,EAH5C;AAII,IAAA,8BAA8B,EAAE;AAC5BC,MAAAA,KAAK,EAAE,0BADqB;AAE5BC,MAAAA,OAAO,EAAE,4CAFmB;AAG5BC,MAAAA,cAAc,EAAE,IAHY;AAI5BC,MAAAA,cAAc,EAAE;AAJY;AAJpC,KAWK,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,GAAD,KAAqD;AAClD,QAAID,MAAM,KAAK,OAAf,EAAwB,oBAAO,oBAAC,iBAAD,OAAP;AACxB,wBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEvB,GAAZ;AAAiB,MAAA,KAAK,EAAE;AAAEyB,QAAAA,OAAO,EAAE;AAAX;AAAxB,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,IADX;AAEI,MAAA,OAAO,EAAE,MAAMtB,WAAW;AAF9B,MADJ,CADJ;AAQH,GArBL,CADJ,CADJ;AA2BH","sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport { Text, ActivityIndicator } from 'react-native';\nimport { Block } from 'galio-framework';\nimport { Button } from 'react-native-elements';\nimport { RNCamera } from 'react-native-camera';\n\nexport default function JVCamera({ meta, value, inline, key, styles }) {\n    const refCamera = useRef(null);\n\n    const takePicture = async () => {\n        if (refCamera.current) {\n            const options = { quality: 0.5, base64: true };\n            const data = await refCamera.current.takePictureAsync(options);\n            console.log(data.uri);\n        }\n    };\n\n    return (\n        <Block>\n            <RNCamera\n                ref={refCamera}\n                type={RNCamera.Constants.Type.back}\n                flashMode={RNCamera.Constants.FlashMode.on}\n                androidCameraPermissionOptions={{\n                    title: 'Permission to use camera',\n                    message: 'We need your permission to use your camera',\n                    buttonPositive: 'Ok',\n                    buttonNegative: 'Cancel',\n                }}\n            >\n                {({ camera, status, recordAudioPermissionStatus }) => {\n                    if (status !== 'READY') return <ActivityIndicator />;\n                    return (\n                        <Block key={key} style={{ padding: 8 }}>\n                            <Button\n                                title={'拍照'}\n                                onPress={() => takePicture()}\n                            />\n                        </Block>\n                    );\n                }}\n            </RNCamera>\n        </Block>\n    );\n}\n"]}