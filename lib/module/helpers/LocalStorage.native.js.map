{"version":3,"sources":["LocalStorage.native.js"],"names":["AsyncStorage","Runtime","LocalStorage","getObject_","key","value","getItem","JSON","parse","e","log","setObject_","jsonValue","stringify","setItem","getString_","setString_","removeItem_","removeItem"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,YAAN,CAAmB;AACQ,eAAVC,UAAU,CAACC,GAAD,EAAM;AACzB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAML,YAAY,CAACM,OAAb,CAAqBF,GAArB,CAApB;;AACA,UAAIC,KAAK,KAAK,IAAd,EAAoB;AAChB,eAAOE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAP;AACH;AACJ,KALD,CAKE,OAAOI,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMD,CAA3B;AACH;AACJ;;AAEsB,eAAVE,UAAU,CAACP,GAAD,EAAMC,KAAN,EAAa;AAChC,QAAI;AACA,YAAMO,SAAS,GAAGL,IAAI,CAACM,SAAL,CAAeR,KAAf,CAAlB;AACA,YAAML,YAAY,CAACc,OAAb,CAAqBV,GAArB,EAA0BQ,SAA1B,CAAN;AACH,KAHD,CAGE,OAAOH,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMD,CAA3B;AACH;AACJ;;AAEsB,eAAVM,UAAU,CAACX,GAAD,EAAM;AACzB,QAAI;AACA,aAAO,MAAMJ,YAAY,CAACM,OAAb,CAAqBF,GAArB,CAAb;AACH,KAFD,CAEE,OAAOK,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMD,CAA3B;AACH;AACJ;;AAEsB,eAAVO,UAAU,CAACZ,GAAD,EAAMC,KAAN,EAAa;AAChC,QAAI;AACA,YAAML,YAAY,CAACc,OAAb,CAAqBV,GAArB,EAA0BC,KAA1B,CAAN;AACH,KAFD,CAEE,OAAOI,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMD,CAA3B;AACH;AACJ;;AAEuB,eAAXQ,WAAW,CAACb,GAAD,EAAM;AAC1B,QAAI;AACA,YAAMJ,YAAY,CAACkB,UAAb,CAAwBd,GAAxB,CAAN;AACH,KAFD,CAEE,OAAOK,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,GAAR,CAAY,OAAZ,EAAqB,MAAMD,CAA3B;AACH;AACJ;;AA3Cc;;AA8CnB,eAAeP,YAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport Runtime from '../Runtime';\n\nclass LocalStorage {\n    static async getObject_(key) {\n        try {\n            const value = await AsyncStorage.getItem(key);\n            if (value !== null) {\n                return JSON.parse(value);\n            }\n        } catch (e) {\n            Runtime.log('error', () => e);\n        }\n    }\n\n    static async setObject_(key, value) {\n        try {\n            const jsonValue = JSON.stringify(value);\n            await AsyncStorage.setItem(key, jsonValue);\n        } catch (e) {\n            Runtime.log('error', () => e);\n        }\n    }\n\n    static async getString_(key) {\n        try {\n            return await AsyncStorage.getItem(key);\n        } catch (e) {\n            Runtime.log('error', () => e);\n        }\n    }\n\n    static async setString_(key, value) {\n        try {\n            await AsyncStorage.setItem(key, value);\n        } catch (e) {\n            Runtime.log('error', () => e);\n        }\n    }\n\n    static async removeItem_(key) {\n        try {\n            await AsyncStorage.removeItem(key);\n        } catch (e) {\n            Runtime.log('error', () => e);\n        }\n    }\n}\n\nexport default LocalStorage;\n"]}