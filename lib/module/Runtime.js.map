{"version":3,"sources":["Runtime.js"],"names":["makeLogger","consoleLogger","getLogLevel","setLogLevel","_defaults","applyScreenComposer","hoc","config","screenComposers","push","updateRuntime","addon","Object","assign","defaultRuntime","setupScreen","elScreen","reduce","r","modulesRegistry","defaultStyleMode","useMobxProvider","localePathBuilder","locale","moduleName","import_","url","register","loadedModule","lazyLoad","notFoundFallbabck","suspenseFallbabck","log","update","default"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,WAJJ,QAKO,gBALP;AAMA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,GAAD,IAASC,MAAM,CAACC,eAAP,CAAuBC,IAAvB,CAA4BH,GAA5B,CAArC;AACP,OAAO,MAAMI,aAAa,GAAIC,KAAD,IAAWC,MAAM,CAACC,MAAP,CAAcN,MAAd,EAAsBI,KAAtB,CAAjC;AACP,OAAO,MAAMG,cAAc,GAAIH,KAAD,IAAWP,SAAS,CAACG,MAAD,EAASI,KAAT,CAA3C;AACP,OAAO,MAAMI,WAAW,GAAIC,QAAD,IACvBT,MAAM,CAACC,eAAP,CAAuBS,MAAvB,CAA8B,CAACC,CAAD,EAAIZ,GAAJ,KAAaY,CAAC,GAAGZ,GAAG,CAACU,QAAD,CAAlD,EAA+DA,QAA/D,CADG;AAGP,MAAMG,eAAe,GAAG,EAAxB;AAEA,MAAMZ,MAAM,GAAG;AACX;AACAa,EAAAA,gBAAgB,EAAE,OAFP;AAGXC,EAAAA,eAAe,EAAE,KAHN;AAIXb,EAAAA,eAAe,EAAE,EAJN;AAMX;AACAc,EAAAA,iBAAiB,EAAE,CAACC,MAAD,EAASC,UAAT,KACd,iBAAgBD,MAAO,IAAGC,UAAW,OAR/B;AAUX;AACAC,EAAAA,OAAO,EAAGC,GAAD,IAASP,eAAe,CAACO,GAAD,CAXtB;AAYXC,EAAAA,QAAQ,EAAE,CAACD,GAAD,EAAME,YAAN,KAAuB;AAC7BT,IAAAA,eAAe,CAACO,GAAD,CAAf,GAAuBE,YAAvB;AACH,GAdU;;AAeX;AACJ;AACA;AACA;AACIC,EAAAA,QAAQ,EAAGH,GAAD,IAASnB,MAAM,CAACkB,OAAP,CAAeC,GAAf,KAAuBnB,MAAM,CAACuB,iBAnBtC;AAoBXA,EAAAA,iBAAiB,EAAE,MAAM,IApBd;AAqBXC,EAAAA,iBAAiB,EAAE,MAAM,IArBd;AAuBX;AACAC,EAAAA,GAAG,EAAEhC,UAAU,CAACC,aAAD,CAxBJ;AAyBXD,EAAAA,UAzBW;AA0BXE,EAAAA,WAAW,EAAEA,WA1BF;AA2BXC,EAAAA,WAAW,EAAEA,WA3BF;AA6BX;AACA8B,EAAAA,MAAM,EAAEvB,aA9BG;AA+BXwB,EAAAA,OAAO,EAAEpB;AA/BE,CAAf;AAkCA,eAAeP,MAAf","sourcesContent":["import {\n    makeLogger,\n    consoleLogger,\n    getLogLevel,\n    setLogLevel,\n} from './utils/logger';\nimport _defaults from 'lodash/defaults';\n\nexport const applyScreenComposer = (hoc) => config.screenComposers.push(hoc);\nexport const updateRuntime = (addon) => Object.assign(config, addon);\nexport const defaultRuntime = (addon) => _defaults(config, addon);\nexport const setupScreen = (elScreen) =>\n    config.screenComposers.reduce((r, hoc) => (r = hoc(elScreen)), elScreen);\n\nconst modulesRegistry = {};\n\nconst config = {\n    //configurable runtime settings\n    defaultStyleMode: 'galio',\n    useMobxProvider: false,\n    screenComposers: [],\n\n    //i18n\n    localePathBuilder: (locale, moduleName) =>\n        `assets/locale/${locale}/${moduleName}.json`,\n\n    //dynamic loading\n    import_: (url) => modulesRegistry[url],\n    register: (url, loadedModule) => {\n        modulesRegistry[url] = loadedModule;\n    },\n    /**\n     *\n     * @param {*} url - component url\n     */\n    lazyLoad: (url) => config.import_(url) || config.notFoundFallbabck,\n    notFoundFallbabck: () => null,\n    suspenseFallbabck: () => null,\n\n    //logger related\n    log: makeLogger(consoleLogger),\n    makeLogger,\n    getLogLevel: getLogLevel,\n    setLogLevel: setLogLevel,\n\n    //updater\n    update: updateRuntime,\n    default: defaultRuntime,\n};\n\nexport default config;\n"]}