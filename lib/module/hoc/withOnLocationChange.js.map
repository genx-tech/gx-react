{"version":3,"sources":["withOnLocationChange.js"],"names":["React","useEffect","useHistory","withOnLocationChange","Component","onLocationChange","props","history","unlisten","listen"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,oBAAoB,GAAIC,SAAD,IAAe,CAAC;AACzCC,EAAAA,gBADyC;AAEzC,KAAGC;AAFsC,CAAD,KAGtC;AACF,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,QAAJ;;AAEA,QAAIH,gBAAJ,EAAsB;AAClBG,MAAAA,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeJ,gBAAf,CAAX;AACH;;AAED,WAAO,MAAMG,QAAQ,IAAIA,QAAQ,EAAjC;AACH,GARQ,EAQN,CAACD,OAAD,EAAUF,gBAAV,CARM,CAAT;AAUA,sBAAO,oBAAC,SAAD,EAAeC,KAAf,CAAP;AACH,CAjBD;;AAmBA,eAAeH,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst withOnLocationChange = (Component) => ({\n    onLocationChange,\n    ...props\n}) => {\n    const history = useHistory();\n\n    useEffect(() => {\n        let unlisten;\n\n        if (onLocationChange) {\n            unlisten = history.listen(onLocationChange);\n        }\n\n        return () => unlisten && unlisten();\n    }, [history, onLocationChange]);\n\n    return <Component {...props} />;\n};\n\nexport default withOnLocationChange;\n"]}