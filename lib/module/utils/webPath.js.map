{"version":3,"sources":["webPath.js"],"names":["dropIfEndsWith","pathname","query","hash","options","loc","window","location","search","webPath","appendPath","mergeQuery","urlParams","URLSearchParams","substr","key","val","Array","isArray","delete","forEach","v","append","set","qs","toString","length"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,eAAe,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AAAA;;AACrD,MAAIC,GAAG,GAAG,YAAAC,MAAM,UAAN,0CAAQC,QAAR,KAAoB;AAAEN,IAAAA,QAAQ,EAAE,GAAZ;AAAiBO,IAAAA,MAAM,EAAE;AAAzB,GAA9B,CADqD,CACQ;;AAC7D,MAAIC,OAAJ,CAFqD,CAIrD;;AACA,MAAIR,QAAQ,IAAI,IAAhB,EAAsB;AAClBQ,IAAAA,OAAO,GAAGJ,GAAG,CAACJ,QAAd;AACH,GAFD,MAEO;AACH,QAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACjBQ,MAAAA,OAAO,GAAG,GAAV;AACH,KAFD,MAEO,IAAIR,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AAC5BQ,MAAAA,OAAO,GAAGR,QAAV;AACH,KAFM,MAEA;AACHQ,MAAAA,OAAO,GAAG,MAAMR,QAAhB;AACH;;AAED,QAAIG,OAAO,IAAIA,OAAO,CAACM,UAAvB,EAAmC;AAC/BD,MAAAA,OAAO,GAAGT,cAAc,CAACK,GAAG,CAACJ,QAAL,EAAe,GAAf,CAAd,GAAoCQ,OAA9C;AACH;AACJ,GAnBoD,CAqBrD;;;AACA,MAAIP,KAAK,IAAI,IAAb,EAAmB;AACf,QAAIE,OAAO,IAAIA,OAAO,CAACO,UAAvB,EAAmC;AAC/BF,MAAAA,OAAO,IAAIJ,GAAG,CAACG,MAAf;AACH;AACJ,GAJD,MAIO;AACH,QAAII,SAAJ;;AAEA,QAAIR,OAAO,IAAIA,OAAO,CAACO,UAAvB,EAAmC;AAC/BC,MAAAA,SAAS,GAAG,IAAIC,eAAJ,CAAoBR,GAAG,CAACG,MAAJ,CAAWM,MAAX,CAAkB,CAAlB,CAApB,CAAZ;AACH,KAFD,MAEO;AACHF,MAAAA,SAAS,GAAG,IAAIC,eAAJ,EAAZ;AACH;;AAED,SAAK,IAAIE,GAAT,IAAgBb,KAAhB,EAAuB;AACnB,UAAIc,GAAG,GAAGd,KAAK,CAACa,GAAD,CAAf;;AACA,UAAIE,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpBJ,QAAAA,SAAS,CAACO,MAAV,CAAiBJ,GAAjB;AACAC,QAAAA,GAAG,CAACI,OAAJ,CAAaC,CAAD,IAAOT,SAAS,CAACU,MAAV,CAAiBP,GAAjB,EAAsBM,CAAtB,CAAnB;AACH,OAHD,MAGO;AACHT,QAAAA,SAAS,CAACW,GAAV,CAAcR,GAAd,EAAmBC,GAAnB;AACH;AACJ;;AAED,QAAIQ,EAAE,GAAGZ,SAAS,CAACa,QAAV,EAAT;;AACA,QAAID,EAAE,CAACE,MAAH,GAAY,CAAhB,EAAmB;AACfjB,MAAAA,OAAO,IAAI,MAAMe,EAAjB;AACH;AACJ,GAjDoD,CAmDrD;;;AACA,MAAIrB,IAAI,IAAI,IAAZ,EAAkB;AACdM,IAAAA,OAAO,IAAI,MAAMN,IAAjB;AACH;;AAED,SAAOM,OAAP;AACH","sourcesContent":["import { dropIfEndsWith } from './string';\n\nexport default function (pathname, query, hash, options) {\n    let loc = window?.location || { pathname: '/', search: '' }; // SSR fallback value\n    let webPath;\n\n    //pathname\n    if (pathname == null) {\n        webPath = loc.pathname;\n    } else {\n        if (pathname === '') {\n            webPath = '/';\n        } else if (pathname[0] === '/') {\n            webPath = pathname;\n        } else {\n            webPath = '/' + pathname;\n        }\n\n        if (options && options.appendPath) {\n            webPath = dropIfEndsWith(loc.pathname, '/') + webPath;\n        }\n    }\n\n    //query\n    if (query == null) {\n        if (options && options.mergeQuery) {\n            webPath += loc.search;\n        }\n    } else {\n        let urlParams;\n\n        if (options && options.mergeQuery) {\n            urlParams = new URLSearchParams(loc.search.substr(1));\n        } else {\n            urlParams = new URLSearchParams();\n        }\n\n        for (let key in query) {\n            let val = query[key];\n            if (Array.isArray(val)) {\n                urlParams.delete(key);\n                val.forEach((v) => urlParams.append(key, v));\n            } else {\n                urlParams.set(key, val);\n            }\n        }\n\n        let qs = urlParams.toString();\n        if (qs.length > 0) {\n            webPath += '?' + qs;\n        }\n    }\n\n    //hash\n    if (hash != null) {\n        webPath += '#' + hash;\n    }\n\n    return webPath;\n}\n"]}