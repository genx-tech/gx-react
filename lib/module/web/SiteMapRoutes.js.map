{"version":3,"sources":["SiteMapRoutes.js"],"names":["React","Route","Switch","Redirect","renderLazy","withOnLocationChange","propsProcessor","props","SiteMapRoutes","sitemap","path","map","node","i","routePath","redirect","exact","jsxComponent","subRoutes","component","layout","layoutProps","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,WAAOA,KAAK,EAAZ;AACH;;AAED,SAAOA,KAAP;AACH;;AAED,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAChD,MAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,GAA7B,EAAkC;AAC9BA,IAAAA,IAAI,GAAG,EAAP;AACH;;AAED,sBACI,oBAAC,MAAD,QACKD,OAAO,CAACE,GAAR,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,QAAIC,SAAS,GAAGF,IAAI,CAACF,IAAL,GAAYA,IAAI,GAAGE,IAAI,CAACF,IAAxB,GAA+B,IAA/C;;AAEA,QAAIE,IAAI,CAACG,QAAT,EAAmB;AACf,0BACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEF,CADT;AAEI,QAAA,EAAE,EAAEH,IAAI,GAAGE,IAAI,CAACG,QAFpB;AAGI,QAAA,IAAI,EAAED,SAHV;AAII,QAAA,KAAK,EAAEF,IAAI,CAACI;AAJhB,QADJ;AAQH;;AAED,QAAIC,YAAJ;;AAEA,QAAIL,IAAI,CAACM,SAAT,EAAoB;AAChBD,MAAAA,YAAY,gBACR,oBAAC,aAAD;AACI,QAAA,OAAO,EAAEL,IAAI,CAACM,SADlB;AAEI,QAAA,IAAI,EAAEJ;AAFV,QADJ;AAMH,KAPD,MAOO;AACHG,MAAAA,YAAY,GAAGb,UAAU,CACrBQ,IAAI,CAACO,SADgB,EAErBb,cAAc,CAACM,IAAI,CAACL,KAAN,CAFO,CAAzB;AAIH;;AAED,QAAIK,IAAI,CAACQ,MAAT,EAAiB;AACb,YAAMb,KAAK,GAAG,EACV,GAAGD,cAAc,CAACM,IAAI,CAACS,WAAN,CADP;AAEVC,QAAAA,QAAQ,EAAEL;AAFA,OAAd;AAIAA,MAAAA,YAAY,GAAGb,UAAU,CAACQ,IAAI,CAACQ,MAAN,EAAcb,KAAd,CAAzB;AACH;;AAED,wBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEM,CAAZ;AAAe,MAAA,IAAI,EAAEC,SAArB;AAAgC,MAAA,KAAK,EAAEF,IAAI,CAACI;AAA5C,OACKC,YADL,CADJ;AAKH,GA3CA,CADL,CADJ;AAgDH,CArDM;AAuDP,eAAeZ,oBAAoB,CAACG,aAAD,CAAnC","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport renderLazy from '../hoc/renderLazy';\nimport withOnLocationChange from '../hoc/withOnLocationChange';\n\nfunction propsProcessor(props) {\n    if (typeof props === 'function') {\n        return props();\n    }\n\n    return props;\n}\n\nexport const SiteMapRoutes = ({ sitemap, path }) => {\n    if (path == null || path === '/') {\n        path = '';\n    }\n\n    return (\n        <Switch>\n            {sitemap.map((node, i) => {\n                let routePath = node.path ? path + node.path : null;\n\n                if (node.redirect) {\n                    return (\n                        <Redirect\n                            key={i}\n                            to={path + node.redirect}\n                            from={routePath}\n                            exact={node.exact}\n                        />\n                    );\n                }\n\n                let jsxComponent;\n\n                if (node.subRoutes) {\n                    jsxComponent = (\n                        <SiteMapRoutes\n                            sitemap={node.subRoutes}\n                            path={routePath}\n                        />\n                    );\n                } else {\n                    jsxComponent = renderLazy(\n                        node.component,\n                        propsProcessor(node.props)\n                    );\n                }\n\n                if (node.layout) {\n                    const props = {\n                        ...propsProcessor(node.layoutProps),\n                        children: jsxComponent,\n                    };\n                    jsxComponent = renderLazy(node.layout, props);\n                }\n\n                return (\n                    <Route key={i} path={routePath} exact={node.exact}>\n                        {jsxComponent}\n                    </Route>\n                );\n            })}\n        </Switch>\n    );\n};\n\nexport default withOnLocationChange(SiteMapRoutes);\n"]}