{"version":3,"sources":["SideMenu.js"],"names":["React","useLocation","NavLink","Menu","renderIt","locationPathToNodes","SubMenu","SideMenu","sitemap","formatPathText","props","location","nodes","pathname","makeMenuItems","routes","map","path","icon","showInMenu","subRoutes","menuProps","menuItem","text","inner","slice"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcH,IAApB;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2B,KAAGC;AAA9B,CAAD,KAA2C;AACxD,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,KAAK,GAAGP,mBAAmB,CAACM,QAAQ,CAACE,QAAV,CAAjC;;AAEA,QAAMC,aAAa,GAAIC,MAAD,IAClBA,MAAM,CAACC,GAAP,CAAW,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA;AAArC,GAAD,KAAsD;AAC7D,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AAED,QAAIC,SAAJ,EAAe;AACX,0BACI,oBAAC,OAAD;AACI,QAAA,GAAG,EAAEH,IADT;AAEI,QAAA,IAAI,EAAEb,QAAQ,CAACc,IAAD,CAFlB;AAGI,QAAA,KAAK,eAAE,kCAAOT,cAAc,CAACQ,IAAD,CAArB;AAHX,SAIQI,SAJR,GAMKP,aAAa,CAACM,SAAD,CANlB,CADJ;AAUH;;AAED,WAAOE,QAAQ,CAACL,IAAD,EAAOC,IAAP,EAAaG,SAAb,CAAf;AACH,GAnBD,CADJ;;AAsBA,QAAMC,QAAQ,GAAG,CAACL,IAAD,EAAOC,IAAP,EAAaG,SAAb,KAA2B;AACxC,UAAME,IAAI,GAAGd,cAAc,CAACQ,IAAD,CAA3B;AAEA,UAAMO,KAAK,gBACP,uDACI,kCAAOD,IAAP,CADJ,CADJ;AAMA,wBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,GAAG,EAAEN,IADT;AAEI,MAAA,IAAI,EAAEb,QAAQ,CAACc,IAAD,CAFlB;AAGI,MAAA,KAAK,EAAEK;AAHX,OAIQF,SAJR,gBAMI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAEJ;AAAb,OAAoBO,KAApB,CANJ,CADJ;AAUH,GAnBD;;AAqBA,sBACI,oBAAC,IAAD;AACI,IAAA,mBAAmB,EAAEZ,KADzB;AAEI,IAAA,eAAe,EAAEA,KAAK,CAACa,KAAN,CAAY,CAAZ;AAFrB,KAGQf,KAHR,GAKKI,aAAa,CAACN,OAAD,CALlB,CADJ;AASH,CAxDD;;AA0DA,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\n\nimport renderIt from '../hoc/renderIt';\nimport locationPathToNodes from '../utils/locationPathToNodes';\n\nconst { SubMenu } = Menu;\n\nconst SideMenu = ({ sitemap, formatPathText, ...props }) => {\n    const location = useLocation();\n    const nodes = locationPathToNodes(location.pathname);\n\n    const makeMenuItems = (routes) =>\n        routes.map(({ path, icon, showInMenu, subRoutes, menuProps }) => {\n            if (!showInMenu) {\n                return false;\n            }\n\n            if (subRoutes) {\n                return (\n                    <SubMenu\n                        key={path}\n                        icon={renderIt(icon)}\n                        title={<span>{formatPathText(path)}</span>}\n                        {...menuProps}\n                    >\n                        {makeMenuItems(subRoutes)}\n                    </SubMenu>\n                );\n            }\n\n            return menuItem(path, icon, menuProps);\n        });\n\n    const menuItem = (path, icon, menuProps) => {\n        const text = formatPathText(path);\n\n        const inner = (\n            <>\n                <span>{text}</span>\n            </>\n        );\n\n        return (\n            <Menu.Item\n                key={path}\n                icon={renderIt(icon)}\n                title={text}\n                {...menuProps}\n            >\n                <NavLink to={path}>{inner}</NavLink>\n            </Menu.Item>\n        );\n    };\n\n    return (\n        <Menu\n            defaultSelectedKeys={nodes}\n            defaultOpenKeys={nodes.slice(1)}\n            {...props}\n        >\n            {makeMenuItems(sitemap)}\n        </Menu>\n    );\n};\n\nexport default SideMenu;\n"]}