{"version":3,"sources":["JsonFormStore.js"],"names":["FormStore","constructor","initValues","readOnly","values","getValue","name","setValue","value","Runtime","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC9B,SAAKC,MAAL,GAAcF,UAAU,IAAI,EAA5B;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAEDE,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,WAAO,mBAAK,KAAKF,MAAV,EAAkBE,IAAlB,CAAP;AACH;;AAEDC,EAAAA,QAAQ,CAACD,IAAD,EAAOE,KAAP,EAAc;AAClB,QAAI,KAAKL,QAAT,EAAmB;AACfM,uBAAQC,GAAR,CACI,SADJ,EAEI,MAAO,4BAA2BJ,IAAK,wBAF3C;AAIH,KALD,MAKO;AACH,yBAAK,KAAKF,MAAV,EAAkBE,IAAlB,EAAwBE,KAAxB;AACH;AACJ;;AAnBW;;eAsBDR,S","sourcesContent":["import _get from 'lodash/get';\nimport _set from 'lodash/set';\nimport Runtime from '../Runtime';\n\nclass FormStore {\n    constructor(initValues, readOnly) {\n        this.values = initValues || {};\n        this.readOnly = readOnly;\n    }\n\n    getValue(name) {\n        return _get(this.values, name);\n    }\n\n    setValue(name, value) {\n        if (this.readOnly) {\n            Runtime.log(\n                'warning',\n                () => `Trying to set the field \"${name}\" of a read-only form.`\n            );\n        } else {\n            _set(this.values, name, value);\n        }\n    }\n}\n\nexport default FormStore;\n"]}