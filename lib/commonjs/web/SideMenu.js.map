{"version":3,"sources":["SideMenu.js"],"names":["SubMenu","Menu","SideMenu","sitemap","formatPathText","props","location","nodes","pathname","makeMenuItems","routes","map","path","icon","showInMenu","subRoutes","menuProps","exact","menuItem","text","inner","slice"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,UAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2B,KAAGC;AAA9B,CAAD,KAA2C;AACxD,QAAMC,QAAQ,GAAG,kCAAjB;AACA,QAAMC,KAAK,GAAG,kCAAoBD,QAAQ,CAACE,QAA7B,CAAd;;AAEA,QAAMC,aAAa,GAAIC,MAAD,IAClBA,MAAM,CAACC,GAAP,CACI,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA,SAArC;AAAgDC,IAAAA;AAAhD,GAAD,KAA6D;AACzD,QAAI,CAACH,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AAED,QAAIC,SAAJ,EAAe;AACX,0BACI,6BAAC,OAAD;AACI,QAAA,GAAG,EAAEH,IADT;AAEI,QAAA,IAAI,EAAE,uBAASC,IAAT,CAFV;AAGI,QAAA,KAAK,eAAE,2CAAOT,cAAc,CAACQ,IAAD,CAArB;AAHX,SAIQI,SAJR,GAMKP,aAAa,CAACM,SAAD,CANlB,CADJ;AAUH;;AAED,WAAOG,QAAQ,CAACN,IAAD,EAAOC,IAAP,EAAaG,SAAb,EAAwBC,KAAxB,CAAf;AACH,GApBL,CADJ;;AAwBA,QAAMC,QAAQ,GAAG,CAACN,IAAD,EAAOC,IAAP,EAAaG,SAAb,EAAwBC,KAAxB,KAAkC;AAC/C,UAAME,IAAI,GAAGf,cAAc,CAACQ,IAAD,CAA3B;;AAEA,UAAMQ,KAAK,gBACP,yEACI,2CAAOD,IAAP,CADJ,CADJ;;AAMA,wBACI,6BAAC,UAAD,CAAM,IAAN;AACI,MAAA,GAAG,EAAEP,IADT;AAEI,MAAA,IAAI,EAAE,uBAASC,IAAT,CAFV;AAGI,MAAA,KAAK,EAAEM;AAHX,OAIQH,SAJR,gBAMI,6BAAC,uBAAD;AAAS,MAAA,EAAE,EAAEJ,IAAb;AAAmB,MAAA,KAAK,EAAEK;AAA1B,OACKG,KADL,CANJ,CADJ;AAYH,GArBD;;AAuBA,sBACI,6BAAC,UAAD;AACI,IAAA,mBAAmB,EAAEb,KADzB;AAEI,IAAA,eAAe,EAAEA,KAAK,CAACc,KAAN,CAAY,CAAZ;AAFrB,KAGQhB,KAHR,GAKKI,aAAa,CAACN,OAAD,CALlB,CADJ;AASH,CA5DD;;eA8DeD,Q","sourcesContent":["import React from 'react';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\n\nimport renderIt from '../hoc/renderIt';\nimport locationPathToNodes from '../utils/locationPathToNodes';\n\nconst { SubMenu } = Menu;\n\nconst SideMenu = ({ sitemap, formatPathText, ...props }) => {\n    const location = useLocation();\n    const nodes = locationPathToNodes(location.pathname);\n\n    const makeMenuItems = (routes) =>\n        routes.map(\n            ({ path, icon, showInMenu, subRoutes, menuProps, exact }) => {\n                if (!showInMenu) {\n                    return false;\n                }\n\n                if (subRoutes) {\n                    return (\n                        <SubMenu\n                            key={path}\n                            icon={renderIt(icon)}\n                            title={<span>{formatPathText(path)}</span>}\n                            {...menuProps}\n                        >\n                            {makeMenuItems(subRoutes)}\n                        </SubMenu>\n                    );\n                }\n\n                return menuItem(path, icon, menuProps, exact);\n            }\n        );\n\n    const menuItem = (path, icon, menuProps, exact) => {\n        const text = formatPathText(path);\n\n        const inner = (\n            <>\n                <span>{text}</span>\n            </>\n        );\n\n        return (\n            <Menu.Item\n                key={path}\n                icon={renderIt(icon)}\n                title={text}\n                {...menuProps}\n            >\n                <NavLink to={path} exact={exact}>\n                    {inner}\n                </NavLink>\n            </Menu.Item>\n        );\n    };\n\n    return (\n        <Menu\n            defaultSelectedKeys={nodes}\n            defaultOpenKeys={nodes.slice(1)}\n            {...props}\n        >\n            {makeMenuItems(sitemap)}\n        </Menu>\n    );\n};\n\nexport default SideMenu;\n"]}