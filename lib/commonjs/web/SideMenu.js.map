{"version":3,"sources":["SideMenu.js"],"names":["SubMenu","Menu","SideMenu","sitemap","formatPathText","props","location","nodes","pathname","makeMenuItems","routes","map","path","icon","Icon","showInMenu","subRoutes","disabled","menuItem","inner","slice"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,UAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2B,KAAGC;AAA9B,CAAD,KAA2C;AACxD,QAAMC,QAAQ,GAAG,kCAAjB;AACA,QAAMC,KAAK,GAAG,kCAAoBD,QAAQ,CAACE,QAA7B,CAAd;;AAEA,QAAMC,aAAa,GAAIC,MAAD,IAClBA,MAAM,CAACC,GAAP,CAAW,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAI,EAAEC,IAAd;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA;AAA3C,GAAD,KAA2D;AAClE,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AAED,QAAIC,SAAJ,EAAe;AACX,0BACI,6BAAC,OAAD;AACI,QAAA,GAAG,EAAEJ,IADT;AAEI,QAAA,KAAK,eACD,2CACKE,IAAI,iBAAI,6BAAC,IAAD,OADb,eAEI,2CAAOV,cAAc,CAACQ,IAAD,CAArB,CAFJ;AAHR,SASKH,aAAa,CAACO,SAAD,CATlB,CADJ;AAaH;;AAED,WAAOE,QAAQ,CAACN,IAAD,EAAOE,IAAP,EAAaG,QAAb,CAAf;AACH,GAtBD,CADJ;;AAyBA,QAAMC,QAAQ,GAAG,CAACN,IAAD,EAAOE,IAAP,EAAaG,QAAb,KAA0B;AACvC,UAAME,KAAK,gBACP,4DACKL,IAAI,iBAAI,6BAAC,IAAD,OADb,eAEI,2CAAOV,cAAc,CAACQ,IAAD,CAArB,CAFJ,CADJ;;AAOA,wBACI,6BAAC,UAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAEA;AAAhB,OACKK,QAAQ,GAAGE,KAAH,gBAAW,6BAAC,uBAAD;AAAS,MAAA,EAAE,EAAEP;AAAb,OAAoBO,KAApB,CADxB,CADJ;AAKH,GAbD;;AAeA,sBACI,6BAAC,UAAD;AACI,IAAA,mBAAmB,EAAEZ,KADzB;AAEI,IAAA,eAAe,EAAEA,KAAK,CAACa,KAAN,CAAY,CAAZ;AAFrB,KAGQf,KAHR,GAKKI,aAAa,CAACN,OAAD,CALlB,CADJ;AASH,CArDD;;eAuDeD,Q","sourcesContent":["import React from 'react';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\n\nimport locationPathToNodes from '../utils/locationPathToNodes';\n\nconst { SubMenu } = Menu;\n\nconst SideMenu = ({ sitemap, formatPathText, ...props }) => {\n    const location = useLocation();\n    const nodes = locationPathToNodes(location.pathname);\n\n    const makeMenuItems = (routes) =>\n        routes.map(({ path, icon: Icon, showInMenu, subRoutes, disabled }) => {\n            if (!showInMenu) {\n                return false;\n            }\n\n            if (subRoutes) {\n                return (\n                    <SubMenu\n                        key={path}\n                        title={\n                            <span>\n                                {Icon && <Icon />}\n                                <span>{formatPathText(path)}</span>\n                            </span>\n                        }\n                    >\n                        {makeMenuItems(subRoutes)}\n                    </SubMenu>\n                );\n            }\n\n            return menuItem(path, Icon, disabled);\n        });\n\n    const menuItem = (path, Icon, disabled) => {\n        const inner = (\n            <>\n                {Icon && <Icon />}\n                <span>{formatPathText(path)}</span>\n            </>\n        );\n\n        return (\n            <Menu.Item key={path}>\n                {disabled ? inner : <NavLink to={path}>{inner}</NavLink>}\n            </Menu.Item>\n        );\n    };\n\n    return (\n        <Menu\n            defaultSelectedKeys={nodes}\n            defaultOpenKeys={nodes.slice(1)}\n            {...props}\n        >\n            {makeMenuItems(sitemap)}\n        </Menu>\n    );\n};\n\nexport default SideMenu;\n"]}