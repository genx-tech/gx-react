{"version":3,"sources":["MuiList.js"],"names":["ListSubheaderStyle","props","theme","typography","overline","marginTop","spacing","marginBottom","paddingLeft","color","palette","text","primary","ListItemStyle","ListItemButton","body2","secondary","top","right","width","bottom","content","display","position","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","main","ListItemIconStyle","ListItemIcon","height","alignItems","justifyContent","MuiListItem","schema","factory","viewState","pathname","path","icon","info","items","isActiveRoot","end","open","setOpen","handleOpen","activeRootStyle","action","selectedOpacity","activeSubStyle","fontWeight","registry","title","map","item","isActiveSub","RouterLink","__","T","MuiList","template","selector","emptyContent","i18nModule","renderItem","renderView","data","section"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Icon, useI18n } from '@genx/react';\nimport {\n    NavLink as RouterLink,\n    matchPath,\n    useLocation,\n} from 'react-router-dom';\n\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport {\n    List,\n    Collapse,\n    ListItemText,\n    ListItemIcon,\n    ListSubheader,\n    ListItemButton,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst ListSubheaderStyle = styled((props) => (\n    <ListSubheader disableSticky disableGutters {...props} />\n))(({ theme }) => ({\n    ...theme.typography.overline,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    color: theme.palette.text.primary,\n}));\n\nconst ListItemStyle = styled(ListItemButton)(({ theme }) => ({\n    ...theme.typography.body2,\n    'height': 48,\n    'position': 'relative',\n    'textTransform': 'capitalize',\n    'paddingLeft': theme.spacing(5),\n    'paddingRight': theme.spacing(2.5),\n    'color': theme.palette.text.secondary,\n    '&:before': {\n        top: 0,\n        right: 0,\n        width: 3,\n        bottom: 0,\n        content: \"''\",\n        display: 'none',\n        position: 'absolute',\n        borderTopLeftRadius: 4,\n        borderBottomLeftRadius: 4,\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nconst ListItemIconStyle = styled(ListItemIcon)({\n    width: 22,\n    height: 22,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n});\n\n// ----------------------------------------------------------------------\n\nconst MuiListItem = ({ schema, factory, viewState }) => {\n    const theme = useTheme();\n\n    const { pathname } = useLocation();\n    const { path, icon, info, items } = schema;\n    const isActiveRoot = path\n        ? !!matchPath({ path, end: false }, pathname)\n        : false;\n\n    const [open, setOpen] = useState(isActiveRoot);\n\n    const handleOpen = () => {\n        setOpen(!open);\n    };\n\n    const activeRootStyle = {\n        'color': 'primary.main',\n        'fontWeight': 'fontWeightMedium',\n        'bgcolor': alpha(\n            theme.palette.primary.main,\n            theme.palette.action.selectedOpacity\n        ),\n        '&:before': { display: 'block' },\n    };\n\n    const activeSubStyle = {\n        color: 'text.primary',\n        fontWeight: 'fontWeightMedium',\n    };\n\n    if (items) {\n        return (\n            <>\n                <ListItemStyle\n                    onClick={handleOpen}\n                    sx={{\n                        ...(isActiveRoot && activeRootStyle),\n                    }}\n                >\n                    <ListItemIconStyle>\n                        {icon && (\n                            <Icon _registry={factory.registry} {...icon} />\n                        )}\n                    </ListItemIconStyle>\n\n                    {\n                        <>\n                            <ListItemText disableTypography primary={title} />\n                            {info}\n                            {icon && (\n                                <Icon _registry={factory.registry} {...icon} />\n                            )}\n                        </>\n                    }\n                </ListItemStyle>\n\n                {\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {items.map((item) => {\n                                const { path, icon } = item;\n                                const isActiveSub = path\n                                    ? !!matchPath(\n                                          { path, end: false },\n                                          pathname\n                                      )\n                                    : false;\n\n                                return (\n                                    <ListItemStyle\n                                        key={path}\n                                        component={RouterLink}\n                                        to={path}\n                                        sx={{\n                                            ...(isActiveSub && activeSubStyle),\n                                        }}\n                                    >\n                                        <ListItemIconStyle>\n                                            {icon && (\n                                                <Icon\n                                                    _registry={factory.registry}\n                                                    {...icon}\n                                                />\n                                            )}\n                                        </ListItemIconStyle>\n                                        <ListItemText\n                                            disableTypography\n                                            primary={__.T(path)}\n                                        />\n                                    </ListItemStyle>\n                                );\n                            })}\n                        </List>\n                    </Collapse>\n                }\n            </>\n        );\n    }\n\n    return (\n        <ListItemStyle\n            component={RouterLink}\n            to={path}\n            sx={{\n                ...(isActiveRoot && activeRootStyle),\n            }}\n        >\n            <ListItemIconStyle>\n                {icon && <Icon _registry={factory.registry} {...icon} />}\n            </ListItemIconStyle>\n            {\n                <>\n                    <ListItemText disableTypography primary={__.T(path)} />\n                    {info}\n                </>\n            }\n        </ListItemStyle>\n    );\n};\n\nexport default function MuiList({ schema, factory, viewState }) {\n    const { items, template, selector, emptyContent, props } = schema;\n    const __ = useI18n(viewState.i18nModule);\n\n    const renderItem = ({ item }) =>\n        template ? (\n            factory.renderView(\n                {\n                    ...template,\n                    data: item,\n                },\n                viewState\n            )\n        ) : (\n            <MuiListItem\n                __={__}\n                schema={item}\n                factory={factory}\n                viewState={viewState}\n            />\n        );\n\n    return (\n        <>\n            {items.map((item) => {\n                if (item.section) {\n                    return (\n                        <List key={item.section} disablePadding>\n                            {\n                                <ListSubheaderStyle>\n                                    {__.T(item.section)}\n                                </ListSubheaderStyle>\n                            }\n                            {item.items.map((item) => renderItem(item))}\n                        </List>\n                    );\n                }\n\n                return renderItem(item);\n            })}\n        </>\n    );\n}\n"]}