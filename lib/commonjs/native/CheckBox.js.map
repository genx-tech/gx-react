{"version":3,"sources":["CheckBox.js"],"names":["CheckBox","props","checked","disabled","title","containerStyle","titleStyle","onPress","size","activeColor","defaultColor","disabledColor","variant","splitTitle","checkedIcon","marginRight","uncheckedIcon","flex","marginLeft"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,cAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA,OANE;AAOFC,IAAAA,IAAI,GAAG,EAPL;AAQFC,IAAAA,WAAW,GAAG,KARZ;AASFC,IAAAA,YAAY,GAAG,eATb;AAUFC,IAAAA,aAAa,GAAG,iBAVd;AAWFC,IAAAA,OAAO,GAAG,QAXR;AAYFC,IAAAA,UAAU,GAAG;AAZX,MAaFZ,KAbJ;;AAeA,QAAMa,WAAW,gBACb,6BAAC,+BAAD;AACI,IAAA,IAAI,EACAF,OAAO,KAAK,QAAZ,GACM,iBADN,GAEM,wBAJd;AAMI,IAAA,KAAK,EAAET,QAAQ,GAAGQ,aAAH,GAAmBF,WANtC;AAOI,IAAA,IAAI,EAAED,IAPV;AAQI,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf;AARX,IADJ;;AAYA,QAAMC,aAAa,gBACf,6BAAC,+BAAD;AACI,IAAA,IAAI,EACAJ,OAAO,KAAK,QAAZ,GACM,wBADN,GAEM,+BAJd;AAMI,IAAA,KAAK,EAAEF,YANX;AAOI,IAAA,IAAI,EAAEF,IAPV;AAQI,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf;AARX,IADJ;;AAaA,sBACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACV,cAAD;AAAb,KACKQ,UAAU,gBACP,6BAAC,qBAAD;AAAO,IAAA,GAAG,MAAV;AAAW,IAAA,GAAG;AAAd,kBACI,6BAAC,qCAAD;AACI,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR,KADX;AAEI,IAAA,OAAO,EAAEV,OAFb;AAGI,IAAA,QAAQ,EAAEJ;AAHd,KAKKD,OAAO,GAAGY,WAAH,GAAiBE,aAL7B,CADJ,EAQK,OAAOZ,KAAP,KAAiB,QAAjB,gBACG,6BAAC,iBAAD;AACI,IAAA,aAAa,EAAE,CADnB;AAEI,IAAA,KAAK,EAAE,CAAC;AAAEc,MAAAA,UAAU,EAAE;AAAd,KAAD,EAAoBZ,UAApB;AAFX,KAIKF,KAJL,CADH,GAQGA,KAhBR,CADO,gBAqBP,6BAAC,qCAAD;AACI,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE;AAAR,KADX;AAEI,IAAA,OAAO,EAAEV,OAFb;AAGI,IAAA,QAAQ,EAAEJ;AAHd,kBAKI,6BAAC,qBAAD;AAAO,IAAA,GAAG,MAAV;AAAW,IAAA,MAAM;AAAjB,KACKD,OAAO,GAAGY,WAAH,GAAiBE,aAD7B,EAEK,OAAOZ,KAAP,KAAiB,QAAjB,gBACG,6BAAC,iBAAD;AACI,IAAA,aAAa,EAAE,CADnB;AAEI,IAAA,KAAK,EAAE,CAAC;AAAEc,MAAAA,UAAU,EAAE;AAAd,KAAD,EAAoBZ,UAApB;AAFX,KAIKF,KAJL,CADH,GAQGA,KAVR,CALJ,CAtBR,CADJ;AA6CH,CAtFD;;eAwFeJ,Q","sourcesContent":["import React from 'react';\nimport { Block } from 'galio-framework';\n\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst CheckBox = (props) => {\n    const {\n        checked,\n        disabled,\n        title,\n        containerStyle,\n        titleStyle,\n        onPress,\n        size = 18,\n        activeColor = 'red',\n        defaultColor = 'rgba(0,0,0,7)',\n        disabledColor = 'rgba(0,0,0,0.3)',\n        variant = 'square',\n        splitTitle = false,\n    } = props;\n\n    const checkedIcon = (\n        <Icon\n            name={\n                variant === 'square'\n                    ? 'checkbox-marked'\n                    : 'checkbox-marked-circle'\n            }\n            color={disabled ? disabledColor : activeColor}\n            size={size}\n            style={{ marginRight: 4 }}\n        />\n    );\n    const uncheckedIcon = (\n        <Icon\n            name={\n                variant === 'square'\n                    ? 'checkbox-blank-outline'\n                    : 'checkbox-blank-circle-outline'\n            }\n            color={defaultColor}\n            size={size}\n            style={{ marginRight: 4 }}\n        />\n    );\n\n    return (\n        <View style={[containerStyle]}>\n            {splitTitle ? (\n                <Block row top>\n                    <TouchableWithoutFeedback\n                        style={{ flex: 1 }}\n                        onPress={onPress}\n                        disabled={disabled}\n                    >\n                        {checked ? checkedIcon : uncheckedIcon}\n                    </TouchableWithoutFeedback>\n                    {typeof title === 'string' ? (\n                        <Text\n                            numberOfLines={0}\n                            style={[{ marginLeft: 4 }, titleStyle]}\n                        >\n                            {title}\n                        </Text>\n                    ) : (\n                        title\n                    )}\n                </Block>\n            ) : (\n                <TouchableWithoutFeedback\n                    style={{ flex: 1 }}\n                    onPress={onPress}\n                    disabled={disabled}\n                >\n                    <Block row middle>\n                        {checked ? checkedIcon : uncheckedIcon}\n                        {typeof title === 'string' ? (\n                            <Text\n                                numberOfLines={0}\n                                style={[{ marginLeft: 4 }, titleStyle]}\n                            >\n                                {title}\n                            </Text>\n                        ) : (\n                            title\n                        )}\n                    </Block>\n                </TouchableWithoutFeedback>\n            )}\n        </View>\n    );\n};\n\nexport default CheckBox;\n"]}